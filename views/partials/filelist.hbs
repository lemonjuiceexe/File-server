<div class="filelist-wrapper">
    {{> filelist_pathBar}}
    <div class="elements">
        {{#each folders}}
            <div class="element folder">
                <a class="element-link"
                   href="{{concatenate "/tree/" @root/currentPath this}}">{{this}}</a>
                <button class="element-button-rename"
                        onclick="renameResource('{{this}}')">
                    Rn
                </button>
                <button class="element-button-delete"
                        onclick="deleteResource('{{this}}', 'folder')">
                    X
                </button>
            </div>
        {{/each}}
        {{#each files}}
            <div class="element file">
                <a class="element-link"
                   href="{{concatenate "/tree/" @root/currentPath this}}">{{this}}</a>
                <button class="element-button-rename"
                        onclick="renameResource('{{this}}')">
                    Rn
                </button>
                <button class="element-button-delete"
                        onclick="deleteResource('{{this}}', 'file')">
                    X
                </button>
            </div>
        {{/each}}
    </div>
</div>

<script>
    function renameResource(oldName) {
        //TODO: Rewrite to html dialog
        const newName = prompt("Enter new name:");
        if (newName === null) {
            return;
        }
        const body = {
            oldName: oldName,
            newName: newName
        };
        fetch("/renameResource", {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            keepalive: true,
            body: JSON.stringify(body)
        })
                .then(response => {
                    if (response.redirected) {
                        window.location.href = response.url;
                    } else {
                        return response.json();
                    }
                })
                .catch(error => console.log(error));
    }
    function deleteResource(name, type) {
        if (!["folder", "file"].includes(type)) {
            throw new Error("Invalid argument in deleteResource function.");
        }
        const body = {
            resourceName: name,
            resourceType: type
        };
        fetch("/deleteResource", {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            keepalive: true,
            body: JSON.stringify(body)
        })
                .then(response => {
                    if (response.redirected) {
                        window.location.href = response.url;
                    } else {
                        return response.json();
                    }
                })
                .catch(error => console.log(error));
    }
</script>
